{"version":3,"sources":["../src/index.js"],"names":["errorCodes","general","cards","profile","auth","account","envelopes","preregister","reloadMoney","sendMoney","servicePayments","pushNotifications","external","buildErrorResponse","error","description","originalError","customError","Error","message","INTERNAL_ERROR","httpStatus","code","buildExternalErrorResponse","mainError","DEFAULT","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,aAAa;AACjBC,4BADiB;AAEjBC,wBAFiB;AAGjBC,4BAHiB;AAIjBC,sBAJiB;AAKjBC,4BALiB;AAMjBC,gCANiB;AAOjBC,oCAPiB;AAQjBC,oCARiB;AASjBC,gCATiB;AAUjBC,4CAViB;AAWjBC,gDAXiB;AAYjBC;AAZiB,CAAnB;;AAeA,MAAMC,qBAAqB,CAACC,QAAQ,EAAT,EAAaC,cAAc,EAA3B,EAA+BC,aAA/B,KAAiD;AAC1E,MAAIC,cAAc,IAAIC,KAAJ,EAAlB;AACAD,cAAYE,OAAZ,GAAsBL,MAAMK,OAAN,IAAiB,kBAAQC,cAAR,CAAuBD,OAA9D;AACAF,cAAYI,UAAZ,GAAyBP,MAAMO,UAAN,IAAoB,kBAAQD,cAAR,CAAuBC,UAApE;AACAJ,cAAYK,IAAZ,GAAmBR,MAAMQ,IAAN,IAAc,kBAAQF,cAAR,CAAuBE,IAAxD;AACAL,cAAYF,WAAZ,GAA0BA,WAA1B;AACA,SAAOE,WAAP;AACD,CAPD;;AASA,MAAMM,6BAA6B,CAACT,QAAQ,EAAT,EAAaC,WAAb,KAA6B;AAC9D,MAAIE,cAAc,IAAIC,KAAJ,EAAlB;AACA,MAAIJ,MAAMU,SAAV,EAAqB;AACnBP,gBAAYE,OAAZ,GAAsBL,MAAMU,SAAN,CAAgBL,OAAhB,IAA2B,uBAASM,OAAT,CAAiBX,KAAjB,CAAuBK,OAAxE;AACAF,gBAAYI,UAAZ,GAAyBP,MAAMU,SAAN,CAAgBH,UAAhB,IAA8B,GAAvD;AACAJ,gBAAYK,IAAZ,GAAmBR,MAAMU,SAAN,CAAgBF,IAAhB,IAAwB,uBAASG,OAAT,CAAiBX,KAAjB,CAAuBQ,IAAlE;AACAL,gBAAYF,WAAZ,GAA0BA,eAAeD,MAAMU,SAAN,CAAgBT,WAA/B,IAA8C,uBAASU,OAAT,CAAiBV,WAAzF;AACD,GALD,MAKO;AACLE,gBAAYE,OAAZ,GAAsBL,MAAMK,OAAN,IAAiB,uBAASM,OAAT,CAAiBX,KAAjB,CAAuBK,OAA9D;AACAF,gBAAYI,UAAZ,GAAyBP,MAAMO,UAAN,IAAoB,GAA7C;AACAJ,gBAAYK,IAAZ,GAAmBR,MAAMQ,IAAN,IAAc,uBAASG,OAAT,CAAiBX,KAAjB,CAAuBQ,IAAxD;AACAL,gBAAYF,WAAZ,GAA0BA,eAAe,EAAzC;AACD;AACD,SAAOE,WAAP;AACD,CAdD;;AAgBAS,OAAOC,OAAP,GAAiB;AACfd,oBADe;AAEfU,4BAFe;AAGfvB;AAHe,CAAjB","file":"index.js","sourcesContent":["import auth from './auth'\nimport general from './general'\nimport cards from './cards'\nimport profile from './profile'\nimport account from './account'\nimport envelopes from './envelopes'\nimport preregister from './preRegister'\nimport reloadMoney from './reloadMoney'\nimport sendMoney from './sendMoney'\nimport servicePayments from './servicePayments'\nimport pushNotifications from './pushNotifications'\nimport external from './externalBank'\n\nconst errorCodes = {\n  general,\n  cards,\n  profile,\n  auth,\n  account,\n  envelopes,\n  preregister,\n  reloadMoney,\n  sendMoney,\n  servicePayments,\n  pushNotifications,\n  external\n}\n\nconst buildErrorResponse = (error = {}, description = '', originalError) => {\n  let customError = new Error()\n  customError.message = error.message || general.INTERNAL_ERROR.message\n  customError.httpStatus = error.httpStatus || general.INTERNAL_ERROR.httpStatus\n  customError.code = error.code || general.INTERNAL_ERROR.code\n  customError.description = description\n  return customError\n}\n\nconst buildExternalErrorResponse = (error = {}, description) => {\n  let customError = new Error()\n  if (error.mainError) {\n    customError.message = error.mainError.message || external.DEFAULT.error.message\n    customError.httpStatus = error.mainError.httpStatus || 409\n    customError.code = error.mainError.code || external.DEFAULT.error.code\n    customError.description = description || error.mainError.description || external.DEFAULT.description\n  } else {\n    customError.message = error.message || external.DEFAULT.error.message\n    customError.httpStatus = error.httpStatus || 409\n    customError.code = error.code || external.DEFAULT.error.code\n    customError.description = description || ''\n  }\n  return customError\n}\n\nmodule.exports = {\n  buildErrorResponse,\n  buildExternalErrorResponse,\n  errorCodes\n}\n"]}